ARG UBUNTU_VERSION=24.10
ARG NODE_VERSION=22.15.0

FROM ubuntu:${UBUNTU_VERSION} AS base

ARG TARGETPLATFORM
ARG BUILDPLATFORM
ARG JDK_VERSION=23.0.1

# Install dependencies
RUN apt-get update && \
    apt-get install -y apt-transport-https ca-certificates wget curl gnupg && \
    update-ca-certificates && \
    rm -rf /var/lib/apt/lists/*

# Download java binaries
RUN arch=$(echo ${TARGETPLATFORM} | sed 's/.*\///') && \
    if [ $arch = "amd64" ]; \
        then jdkArch="x64"; \
        else jdkArch="aarch64"; \
    fi && \
    wget --output-document=/tmp/jdk.tar.gz https://download.java.net/java/GA/jdk${JDK_VERSION}/c28985cbf10d4e648e4004050f8781aa/11/GPL/openjdk-${JDK_VERSION}_linux-${jdkArch}_bin.tar.gz && \
    tar --extract --verbose --file=/tmp/jdk.tar.gz --directory=/usr/local && \
    rm /tmp/jdk.tar.gz

# Make java binaries globally available
ENV JAVA_HOME="/usr/local/jdk-${JDK_VERSION}"
ENV PATH="$JAVA_HOME/bin:$PATH"

FROM base AS maven

# Download maven
RUN MAVEN_VERSION=$(wget -q -O - "https://dlcdn.apache.org/maven/maven-3/" | grep -o '3\.9\.[0-9]*' | sort -V | tail -n 1) && \
    wget --output-document=/tmp/maven.tar.gz https://dlcdn.apache.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz &&\
    tar --extract --verbose --file=/tmp/maven.tar.gz --directory=/usr/local && \
    mv /usr/local/apache-maven-$MAVEN_VERSION /usr/local/apache-maven && \
    rm /tmp/maven.tar.gz

# Make maven binaries globally available
ENV MAVEN_HOME="/usr/local/apache-maven"
ENV MAVEN_OPTS="-Dmaven.repo.local=./.m2"
ENV PATH="$MAVEN_HOME/bin:${PATH}"

FROM node:${NODE_VERSION}-slim AS node

FROM maven AS build

# Set working directory
WORKDIR /opt/apps/app

# Copy package dependencies
COPY pom.xml .
COPY src ./src

# Build JAR archive
RUN mvn clean package -DskipTests

FROM base AS deploy

# Install doppler
RUN apt-get update && apt-get install -y apt-transport-https ca-certificates curl gnupg && \
    curl -sLf --retry 3 --tlsv1.2 --proto "=https" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | gpg --dearmor -o /usr/share/keyrings/doppler-archive-keyring.gpg && \
    echo "deb [signed-by=/usr/share/keyrings/doppler-archive-keyring.gpg] https://packages.doppler.com/public/cli/deb/debian any-version main" | tee /etc/apt/sources.list.d/doppler-cli.list && \
    apt-get update && \
    apt-get install doppler

# Create non-root user for security
RUN groupadd -g 1001 spring && \
    useradd -u 1001 -g spring -s /bin/bash -m spring

USER spring:spring

# Set working directory
WORKDIR /opt/apps/app

# Copy JAR archive
COPY --chown=spring:spring --from=build /opt/apps/app/target/*.jar ./app.jar

COPY --chown=spring:spring ./devops/deployment/run.sh ./run.sh
RUN chmod +x ./run.sh

# Expose tomcat server port
EXPOSE 8080

CMD ["./run.sh"]

FROM deploy AS http

ENV SPRING_ACTIVE_PROFILE=http

FROM deploy AS queue

ENV SPRING_ACTIVE_PROFILE=queue

FROM deploy AS scheduler

ENV SPRING_ACTIVE_PROFILE=scheduler

FROM http