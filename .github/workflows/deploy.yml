name: "Deploy server"

on:
  push:
    branches:
      - main
      - staging

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  CI:
    name: "Continuous Integration"
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Environment Prefix
        id: env_prefix
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "prefix=PRODUCTION" >> $GITHUB_OUTPUT
          else
            echo "prefix=STAGING" >> $GITHUB_OUTPUT
          fi

      - name: Map secrets to outputs
        id: vars
        run: |
          echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_OUTPUT
          echo "DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }}" >> $GITHUB_OUTPUT
          echo "APP_NAME=${{ secrets.APP_NAME }}" >> $GITHUB_OUTPUT
          echo "DOPPLER_TOKEN=${{ secrets[format('{0}_DOPPLER_TOKEN', steps.env_prefix.outputs.prefix)] }}" >> $GITHUB_OUTPUT
          echo "SSH_USERNAME=${{ secrets[format('{0}_SSH_USERNAME', steps.env_prefix.outputs.prefix)] }}" >> $GITHUB_OUTPUT
          echo "PUBLIC_IP=${{ secrets[format('{0}_PUBLIC_IP', steps.env_prefix.outputs.prefix)] }}" >> $GITHUB_OUTPUT
          echo "STACK_LOCATION=${{ secrets[format('{0}_STACK_LOCATION', steps.env_prefix.outputs.prefix)] }}" >> $GITHUB_OUTPUT
          echo "STACK_NAME=${{ secrets[format('{0}_STACK_NAME', steps.env_prefix.outputs.prefix)] }}" >> $GITHUB_OUTPUT
          echo "SSH_PRIVATE_KEY<<EOF" >> $GITHUB_OUTPUT
          echo "${{ secrets[format('{0}_SSH_PRIVATE_KEY', steps.env_prefix.outputs.prefix)] }}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ steps.vars.outputs.DOCKERHUB_USERNAME }}
          password: ${{ steps.vars.outputs.DOCKERHUB_TOKEN }}
      - name: Build and push http image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: devops/deployment/Dockerfile.prod
          target: http
          push: true
          tags: "${{ steps.vars.outputs.DOCKERHUB_USERNAME }}/${{ steps.vars.outputs.APP_NAME }}-http:${{ github.sha }}"
      - name: Build and push queue image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: devops/deployment/Dockerfile.prod
          target: queue
          push: true
          tags: "${{ steps.vars.outputs.DOCKERHUB_USERNAME }}/${{ steps.vars.outputs.APP_NAME }}-queue:${{ github.sha }}"
      - name: Build and push scheduler image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: devops/deployment/Dockerfile.prod
          target: scheduler
          push: true
          tags: "${{ steps.vars.outputs.DOCKERHUB_USERNAME }}/${{ steps.vars.outputs.APP_NAME }}-scheduler:${{ github.sha }}"
      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ steps.vars.outputs.SSH_PRIVATE_KEY }}
      - name: Deploy App stack
        run: |
          ssh-keyscan -t rsa ${{ steps.vars.outputs.PUBLIC_IP }} >> ~/.ssh/known_hosts
          ssh ${{ steps.vars.outputs.SSH_USERNAME }}@${{ steps.vars.outputs.PUBLIC_IP }} "IMAGE_TAG=${{ github.sha }} doppler run --token=${{ steps.vars.outputs.DOPPLER_TOKEN }} -- docker stack deploy -c ${{ steps.vars.outputs.STACK_LOCATION }}/docker-compose.yml ${{ steps.vars.outputs.STACK_NAME }}"
